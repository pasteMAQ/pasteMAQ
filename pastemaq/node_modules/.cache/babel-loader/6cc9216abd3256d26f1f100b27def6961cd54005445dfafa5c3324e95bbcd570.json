{"ast":null,"code":"var _jsxFileName = \"/Users/kaashish/pastemaq/pastemaq/src/components/PasteMAQ.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasteMAQ = () => {\n  _s();\n  const navigate = useNavigate();\n  var datemap = {\n    1: \"January\",\n    2: \"February\",\n    3: \"March\",\n    4: \"April\",\n    5: \"May\",\n    6: \"June\",\n    7: \"July\",\n    8: \"August\",\n    9: \"September\",\n    10: \"October\",\n    11: \"November\",\n    12: \"December\"\n  };\n  const [expiryDate, setExpiryDate] = useState(new Date());\n  const [text, setText] = useState('');\n  const [pasteId, setPasteId] = useState();\n  useEffect(() => {\n    var date = new Date();\n    date.setDate(date.getDate() + 60);\n    setExpiryDate(date);\n    setPasteId(nanoid(9));\n  }, []);\n  function handleChange(event) {\n    setText(event.target.value);\n  }\n  const handleClick = () => {\n    var data = {\n      \"content\": text,\n      \"expiryDate\": expiryDate,\n      \"pasteId\": pasteId\n    };\n    fetch('http://localhost:5005/paste', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n      mode: 'cors'\n    }).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    fetch('http://localhost:5005/currentsong', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    }).then(data => {\n      navigate(\"/view-paste/\" + pasteId + \"/\" + expiryDate + \"/\" + text);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    console.log(\"worked: \", text, expiryDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"code\",\n      rows: \"10\",\n      cols: \"80\",\n      style: {\n        height: '170px'\n      },\n      value: text,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"This paste will expire by default on \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"time\",\n          children: datemap[(expiryDate === null || expiryDate === void 0 ? void 0 : expiryDate.getMonth()) + 1] + \" \" + (expiryDate === null || expiryDate === void 0 ? void 0 : expiryDate.getDate()) + \", \" + (expiryDate === null || expiryDate === void 0 ? void 0 : expiryDate.getFullYear())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Select Expiry Date \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: expiryDate,\n          onChange: event => setExpiryDate(new Date(event.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          value: \"Paste!\",\n          onClick: () => handleClick(),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Paste!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 88\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(PasteMAQ, \"bwFsRxVDYKH9/dEQGbEvlApEeb4=\", false, function () {\n  return [useNavigate];\n});\n_c = PasteMAQ;\nexport default PasteMAQ;\nvar _c;\n$RefreshReg$(_c, \"PasteMAQ\");","map":{"version":3,"names":["React","useEffect","useState","nanoid","useNavigate","jsxDEV","_jsxDEV","PasteMAQ","_s","navigate","datemap","expiryDate","setExpiryDate","Date","text","setText","pasteId","setPasteId","date","setDate","getDate","handleChange","event","target","value","handleClick","data","fetch","method","headers","body","JSON","stringify","mode","then","console","log","catch","error","children","name","rows","cols","style","height","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","getMonth","getFullYear","type","onClick","_c","$RefreshReg$"],"sources":["/Users/kaashish/pastemaq/pastemaq/src/components/PasteMAQ.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useNavigate } from \"react-router-dom\";\n\nconst PasteMAQ = () => {\n    const navigate = useNavigate();\n    var datemap = { 1: \"January\", 2: \"February\", 3: \"March\", 4: \"April\", 5: \"May\", 6: \"June\", 7: \"July\", 8: \"August\", 9: \"September\", 10: \"October\", 11: \"November\", 12: \"December\" };\n    const [expiryDate, setExpiryDate] = useState(new Date());\n    const [text, setText] = useState('');\n    const [pasteId, setPasteId] = useState();\n\n    useEffect(() => {\n        var date = new Date();\n        date.setDate(date.getDate() + 60)\n        setExpiryDate(date);\n        setPasteId(nanoid(9));\n    }, []);\n\n    function handleChange(event) {\n        setText(event.target.value);\n    }\n\n    const handleClick = () => {\n        var data = {\n            \"content\": text,\n            \"expiryDate\": expiryDate,\n            \"pasteId\": pasteId\n        };\n        fetch('http://localhost:5005/paste', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n            mode: 'cors'\n        })\n            .then(data => {\n                console.log(data);\n            }\n            )\n            .catch((error) => {\n                console.error('Error:', error);\n            }\n            );\n\n        fetch('http://localhost:5005/currentsong', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            mode: 'cors'\n        })\n            .then(data => {\n                navigate(\"/view-paste/\" + pasteId + \"/\" + expiryDate + \"/\" + text);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n        console.log(\"worked: \", text, expiryDate)\n    }\n\n    return (\n        <div>\n            <textarea name=\"code\" rows=\"10\" cols=\"80\" style={{ height: '170px' }} value={text} onChange={handleChange}></textarea>\n            <div>\n                <h5>This paste will expire by default on <span id=\"time\">{datemap[expiryDate?.getMonth() + 1] + \" \" + expiryDate?.getDate() + \", \" + expiryDate?.getFullYear()}</span></h5>\n                <h5>Select Expiry Date <input type=\"date\" value={expiryDate} onChange={(event) => setExpiryDate(new Date(event.target.value))} /></h5>\n                <div>\n                    <button type=\"submit\" value=\"Paste!\" onClick={() => handleClick()}><span>Paste!</span></button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PasteMAQ;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}